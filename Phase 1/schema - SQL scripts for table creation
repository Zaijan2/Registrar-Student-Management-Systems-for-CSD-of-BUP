

create table course (
	courseID int primary key auto_increment,
    courseName varchar (100),
    Description varchar (100),
    credits int
    );

create table subject (
	SubjectID int primary key auto_increment,
    SubjecName varchar (100),
    Description varchar(500)
    );

create table student (
	StudenID int primary key auto_increment,
    lastname varchar (50),
    firstname varchar (50),
    middleInitial char(1),
    DOB date,
    Email varchar (100),
    contact varchar (100),
    street varchar (100),
    barangay varchar (100),
    municipality varchar (100),
    province varchar (100),
    block varchar (50),
    CourseID int,
    foreign key (CourseID) references course(CourseID)
    );

create table faculty (
	FacultyID int primary key auto_increment,
    Lastname varchar (50),
    firstname varchar (50),
    middleInitial char (1),
    Email varchar (100),
    Contact varchar (15),
    SubjectID int,
    foreign key (subjectID) references subject (subjectID)
    );

create table grades (
	GradeID int primary key auto_increment,
    Semester varchar(10),
    Year year,
    grade varchar (10),
    remarks enum ('Passed','Failed','Incomplete'),
    StudentID int,
    SubjectID int,
    CourseID int,
    foreign key (studentID) references student (studentID),
    foreign key (subjectID) references subject (subjectID),
    foreign key (courseID) references course (courseID)
    );

create table enrolledsubject (
	EnrolledSubject int primary key auto_increment,
    Semester varchar (10),
    year year,
    StudentID int,
    SubjectID int,
    CourseID int,
    foreign key (StudentID) references student (studentid),
    foreign key ( subjectID) references subject (subjectid),
    foreign key (courseid) references course (courseid)
    );

create table enrollment (
	EnrollmentID int primary key auto_increment,
    Semester varchar (100),
    Year year,
    status enum ('Enrolled','Completed','Dropped'),
    timestamp timestamp,
    StudentID int,
    CourseID int,
    foreign key (studentID) references student (studentID),
    foreign key (courseID) references course (courseid)
    );

create table classschedule (
	ScheduleID int primary key auto_increment,
    block varchar (50),
    room varchar (50),
    day enum ('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'),
    timeslot time,
    StudentID int,
    courseID int,
    FacultyID int,
    subjectID int,
    foreign key (StudentID) references student (studentID),
    foreign key (courseID) references course (courseid),
    foreign key (facultyid) references faculty (facultyID),
    foreign key (subjectID) references subject (subjectid)
    );

